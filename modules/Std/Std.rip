$
  #include <stdio.h>
  #include <stdlib.h>
$

module Std
  println(*args)
    Std.print_array(args)
    $ printf("\n"); $

  format(*args)
    if args.size == 0
      return ""
    $ char buf[1024];
      buf[0] = 0; $
    for i in 1:args.size
      str = args[i].to_string()
      $ strcat(buf, val_to_string(__str)); $
    return $ string_to_val(buf) $

  print(*args)
    Std.print_array(args)

  print_array(arr)
    if arr.size == 0
      return
    for i in 1:arr.size
      str = arr[i].to_string()
      $ printf("%s", val_to_string(__str)); $

  atoi(arg)
    $
      char* s = val_to_string(__arg);
      return int64_to_val(atoi(s));
    $

  atof(arg)
    $
      char* s = val_to_string(__arg);
      return double_to_val(atof(s));
    $

  get_args()
    $
      Value* args = alloca((sys_argc - 1) * sizeof(Value));
      for (int arg = 1; arg < sys_argc; arg++){
        args[arg-1] = string_to_val(sys_argv[arg]);
      }
      return array1_to_val(sys_argc - 1, args);
    $
